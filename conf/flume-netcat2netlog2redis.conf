# 网络日志处理 测试单个命令是否能够执行
a1.sinks = k1
a1.channels = c1
a1.sources = r1


# Describe/configure the source
a1.sources.r1.type = netcat
a1.sources.r1.channels = c1
a1.sources.r1.bind = 0.0.0.0
a1.sources.r1.port = 44444


a1.sources.r1.interceptors = i2 i3

#过滤掉无效用户数据
a1.sources.r1.interceptors.i2.type = com.supermy.flume.interceptor.RuleFilteringInterceptor$Builder
a1.sources.r1.interceptors.i2.rule = /home/hadoop/my/apache-flume-1.7.0-bin/conf/g-netlog-filter.groovy
a1.sources.r1.interceptors.i2.ruleName = filterGroovy

#转换数据格式为 lua 脚本
a1.sources.r1.interceptors.i3.type = com.supermy.flume.interceptor.RuleSearchAndReplaceInterceptor$Builder
a1.sources.r1.interceptors.i3.searchReplaceDsl = /home/hadoop/my/apache-flume-1.7.0-bin/conf/g-netlog-search-replace.groovy
a1.sources.r1.interceptors.i3.searchReplaceKey = searchReplaceGroovy


# Describe the sink
# a1.sinks.k1.type = logger


# Describe the sink
#a1.sinks.k1.type = logger
#logstash 是队列的 key
a1.sinks.k1.type = com.supermy.redis.flume.redis.sink.RedisEVALSink
a1.sinks.k1.channel = c1
a1.sinks.k1.host = 132.194.43.153
# 用不上
a1.sinks.k1.key = jplist
a1.sinks.k1.batch_size = 10000
#a1.sinks.k1.serializer = com.supermy.redis.flume.redis.sink.serializer.LogstashSerializer



# Use a channel which buffers events in memory
a1.channels.c1.type = memory
a1.channels.c1.capacity = 10000
a1.channels.c1.transactionCapacity = 1000

# Bind the source and sink to the channel
//a1.sources.r1.channels = c1



#bin/flume-ng agent --conf conf --conf-file conf/flume-netcat2netlog2redis.conf --name a1 -Dflume.root.logger=INFO,console
#test
#telnet localhost 44444