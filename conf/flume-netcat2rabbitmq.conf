# example.conf: A single-node Flume configuration

# Name the components on this agent
a1.sources = r1
a1.sinks = k1
a1.channels = c1

# Describe/configure the source
a1.sources.r1.type = netcat
a1.sources.r1.bind = 0.0.0.0
a1.sources.r1.port = 44444

#curl -i -u guest:bonc1q2w3e -H "content-type:application/json" \
#   -XPOST -d'{"properties":{},"routing_key":"a.aa","payload":"172.17.0.1 - - [12/Sep/2016:22:57:28 +0800] \"GET /dbtest/token.jsp HTTP/1.1\" 200 317 \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36\" \"-\"","payload_encoding":"string"}' \
#   http://127.0.0.1:15672/api/exchanges/%2f/ex-sync-logs/publish

a1.sources.r1.interceptors = i1 i2 i3
a1.sources.r1.interceptors.i1.type = regex_extractor
a1.sources.r1.interceptors.i1.regex = (.+):(.+):(.+):(.+)
a1.sources.r1.interceptors.i1.serializers = s1 s2 s3 s4
a1.sources.r1.interceptors.i1.serializers.s1.name = routing-key
a1.sources.r1.interceptors.i1.serializers.s2.name = starttime
a1.sources.r1.interceptors.i1.serializers.s3.name = endtime
a1.sources.r1.interceptors.i1.serializers.s4.name = systime

#如果excludeEvents设为true，则表示过滤掉以lxw1234开头的events。
#在使用 Regex Filtering Interceptor的时候一个属性是excludeEvents
#当它的值为true 的时候，过滤掉匹配到当前正则表达式的一行
#当它的值为false的时候，就接受匹配到正则表达式的一行

#a1.sources.r1.interceptors = i2
a1.sources.r1.interceptors.i2.type = com.supermy.flume.interceptor.RuleFilteringInterceptor$Builder
#通过脚本的返回值，数据是否向下传递 参数 body / head(json 格式) 可以引用
a1.sources.r1.interceptors.i2.rule = /etc/flume/conf/g-filter.groovy
a1.sources.r1.interceptors.i2.ruleName = filterGroovy

a1.sources.r1.interceptors.i3.type = com.supermy.flume.interceptor.RuleSearchAndReplaceInterceptor$Builder
#通过脚本的返回值，数据是否向下传递 参数 body / head(json 格式) 可以引用
a1.sources.r1.interceptors.i3.searchReplaceDsl = /etc/flume/conf/g-search-replace.groovy
a1.sources.r1.interceptors.i3.searchReplaceKey = searchReplaceGroovy


# Describe the sink
a1.sinks.k1.type = logger

#a1.sinks.k1.type = com.aweber.flume.sink.rabbitmq.RabbitMQSink
a1.sinks.k1.host = mq
a1.sinks.k1.port = 5672
a1.sinks.k1.virtual-host = statuscheckvhost
a1.sinks.k1.username = heartbeat
a1.sinks.k1.password = alive
a1.sinks.k1.exchange = ex-sync-logs
a1.sinks.k1.routing-key = flume.event
a1.sinks.k1.publisher-confirms = true



# Use a channel which buffers events in memory
a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000
a1.channels.c1.transactionCapacity = 100

# Bind the source and sink to the channel
a1.sources.r1.channels = c1
a1.sinks.k1.channel = c1

#bin/flume-ng agent --conf conf --conf-file conf/flume.conf.example1 --name a1 -Dflume.root.logger=INFO,console
#test
#telnet localhost 44444